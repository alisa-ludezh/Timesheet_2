//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TimeSheet_git.WebService_1S {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PortalSoapBinding", Namespace="www.URII.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Property[][]))]
    public partial class Portal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueryToDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableChangingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portal() {
            this.Url = global::TimeSheet_git.Properties.Settings.Default.TimeSheet_git_WebService_1S_Portal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueryToDatabaseCompletedEventHandler QueryToDatabaseCompleted;
        
        /// <remarks/>
        public event TableChangingCompletedEventHandler TableChangingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.URII.com#Portal:QueryToDatabase", RequestNamespace="www.URII.com", ResponseNamespace="www.URII.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Data", Namespace="http://10.5.28.128/request")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Properties", Namespace="http://10.5.28.128/request", NestingLevel=1)]
        public Property[][] QueryToDatabase(string Login, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime BeginDate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime EndDate) {
            object[] results = this.Invoke("QueryToDatabase", new object[] {
                        Login,
                        BeginDate,
                        EndDate});
            return ((Property[][])(results[0]));
        }
        
        /// <remarks/>
        public void QueryToDatabaseAsync(string Login, System.DateTime BeginDate, System.DateTime EndDate) {
            this.QueryToDatabaseAsync(Login, BeginDate, EndDate, null);
        }
        
        /// <remarks/>
        public void QueryToDatabaseAsync(string Login, System.DateTime BeginDate, System.DateTime EndDate, object userState) {
            if ((this.QueryToDatabaseOperationCompleted == null)) {
                this.QueryToDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryToDatabaseOperationCompleted);
            }
            this.InvokeAsync("QueryToDatabase", new object[] {
                        Login,
                        BeginDate,
                        EndDate}, this.QueryToDatabaseOperationCompleted, userState);
        }
        
        private void OnQueryToDatabaseOperationCompleted(object arg) {
            if ((this.QueryToDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryToDatabaseCompleted(this, new QueryToDatabaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.URII.com#Portal:TableChanging", RequestNamespace="www.URII.com", ResponseNamespace="www.URII.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public bool TableChanging(string Login, DayTypeData DayTypeData) {
            object[] results = this.Invoke("TableChanging", new object[] {
                        Login,
                        DayTypeData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TableChangingAsync(string Login, DayTypeData DayTypeData) {
            this.TableChangingAsync(Login, DayTypeData, null);
        }
        
        /// <remarks/>
        public void TableChangingAsync(string Login, DayTypeData DayTypeData, object userState) {
            if ((this.TableChangingOperationCompleted == null)) {
                this.TableChangingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableChangingOperationCompleted);
            }
            this.InvokeAsync("TableChanging", new object[] {
                        Login,
                        DayTypeData}, this.TableChangingOperationCompleted, userState);
        }
        
        private void OnTableChangingOperationCompleted(object arg) {
            if ((this.TableChangingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableChangingCompleted(this, new TableChangingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://10.5.28.128/request")]
    public partial class Property {
        
        private string nameField;
        
        private string typeField;
        
        private object valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://10.5.28.128/request")]
    public partial class DayTypeData {
        
        private string personTabNomField;
        
        private string dayField;
        
        private string typeField;
        
        /// <remarks/>
        public string PersonTabNom {
            get {
                return this.personTabNomField;
            }
            set {
                this.personTabNomField = value;
            }
        }
        
        /// <remarks/>
        public string Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void QueryToDatabaseCompletedEventHandler(object sender, QueryToDatabaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryToDatabaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryToDatabaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Property[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Property[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TableChangingCompletedEventHandler(object sender, TableChangingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableChangingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableChangingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591